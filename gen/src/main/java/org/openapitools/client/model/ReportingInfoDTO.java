/*
 * Сервіс чатбота
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ReportingInfoDTO
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-11-10T13:37:39.038490800+02:00[Europe/Helsinki]")
public class ReportingInfoDTO {
  public static final String SERIALIZED_NAME_NOT_REPORTED_ORGS = "notReportedOrgs";
  @SerializedName(SERIALIZED_NAME_NOT_REPORTED_ORGS)
  private List<String> notReportedOrgs = null;

  public static final String SERIALIZED_NAME_QUARTER = "quarter";
  @SerializedName(SERIALIZED_NAME_QUARTER)
  private Integer quarter;

  public static final String SERIALIZED_NAME_YEAR = "year";
  @SerializedName(SERIALIZED_NAME_YEAR)
  private Integer year;


  public ReportingInfoDTO notReportedOrgs(List<String> notReportedOrgs) {
    
    this.notReportedOrgs = notReportedOrgs;
    return this;
  }

  public ReportingInfoDTO addNotReportedOrgsItem(String notReportedOrgsItem) {
    if (this.notReportedOrgs == null) {
      this.notReportedOrgs = new ArrayList<String>();
    }
    this.notReportedOrgs.add(notReportedOrgsItem);
    return this;
  }

   /**
   * Get notReportedOrgs
   * @return notReportedOrgs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getNotReportedOrgs() {
    return notReportedOrgs;
  }


  public void setNotReportedOrgs(List<String> notReportedOrgs) {
    this.notReportedOrgs = notReportedOrgs;
  }


  public ReportingInfoDTO quarter(Integer quarter) {
    
    this.quarter = quarter;
    return this;
  }

   /**
   * Get quarter
   * @return quarter
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getQuarter() {
    return quarter;
  }


  public void setQuarter(Integer quarter) {
    this.quarter = quarter;
  }


  public ReportingInfoDTO year(Integer year) {
    
    this.year = year;
    return this;
  }

   /**
   * Get year
   * @return year
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getYear() {
    return year;
  }


  public void setYear(Integer year) {
    this.year = year;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReportingInfoDTO reportingInfoDTO = (ReportingInfoDTO) o;
    return Objects.equals(this.notReportedOrgs, reportingInfoDTO.notReportedOrgs) &&
        Objects.equals(this.quarter, reportingInfoDTO.quarter) &&
        Objects.equals(this.year, reportingInfoDTO.year);
  }

  @Override
  public int hashCode() {
    return Objects.hash(notReportedOrgs, quarter, year);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReportingInfoDTO {\n");
    sb.append("    notReportedOrgs: ").append(toIndentedString(notReportedOrgs)).append("\n");
    sb.append("    quarter: ").append(toIndentedString(quarter)).append("\n");
    sb.append("    year: ").append(toIndentedString(year)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

